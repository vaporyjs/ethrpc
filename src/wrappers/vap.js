"use strict";

var makeWrapper = require("./make-wrapper");

module.exports = {
  accounts: makeWrapper("vap_accounts"),
  blockNumber: makeWrapper("vap_blockNumber"),
  call: makeWrapper("vap_call"),
  coinbase: makeWrapper("vap_coinbase"),
  compileLLL: makeWrapper("vap_compileLLL"),
  compileSerpent: makeWrapper("vap_compileSerpent"),
  compileSolidity: makeWrapper("vap_compileSolidity"),
  estimateGas: makeWrapper("vap_estimateGas"),
  gasPrice: makeWrapper("vap_gasPrice"),
  getBalance: makeWrapper("vap_getBalance"),
  getBlockByHash: makeWrapper("vap_getBlockByHash"),
  getBlockByNumber: makeWrapper("vap_getBlockByNumber"),
  getBlockTransactionCountByHash: makeWrapper("vap_getBlockTransactionCountByHash"),
  getBlockTransactionCountByNumber: makeWrapper("vap_getBlockTransactionCountByNumber"),
  getCode: makeWrapper("vap_getCode"),
  getCompilers: makeWrapper("vap_getCompilers"),
  getFilterChanges: makeWrapper("vap_getFilterChanges"),
  getFilterLogs: makeWrapper("vap_getFilterLogs"),
  getLogs: makeWrapper("vap_getLogs"),
  getStorageAt: makeWrapper("vap_getStorageAt"),
  getTransactionByBlockHashAndIndex: makeWrapper("vap_getTransactionByBlockHashAndIndex"),
  getTransactionByBlockNumberAndIndex: makeWrapper("vap_getTransactionByBlockNumberAndIndex"),
  getTransactionByHash: makeWrapper("vap_getTransactionByHash"),
  getTransactionCount: makeWrapper("vap_getTransactionCount"),
  getTransactionReceipt: makeWrapper("vap_getTransactionReceipt"),
  getUncleByBlockHashAndIndex: makeWrapper("vap_getUncleByBlockHashAndIndex"),
  getUncleByBlockNumberAndIndex: makeWrapper("vap_getUncleByBlockNumberAndIndex"),
  getUncleCountByBlockHash: makeWrapper("vap_getUncleCountByBlockHash"),
  getUncleCountByBlockNumber: makeWrapper("vap_getUncleCountByBlockNumber"),
  getWork: makeWrapper("vap_getWork"),
  hashrate: makeWrapper("vap_hashrate"),
  mining: makeWrapper("vap_mining"),
  newBlockFilter: makeWrapper("vap_newBlockFilter"),
  newFilter: makeWrapper("vap_newFilter"),
  newPendingTransactionFilter: makeWrapper("vap_newPendingTransactionFilter"),
  protocolVersion: makeWrapper("vap_protocolVersion"),
  sendRawTransaction: makeWrapper("vap_sendRawTransaction"),
  sendTransaction: makeWrapper("vap_sendTransaction"),
  sign: makeWrapper("vap_sign"),
  signTransaction: makeWrapper("vap_signTransaction"),
  submitHashrate: makeWrapper("vap_submitHashrate"),
  submitWork: makeWrapper("vap_submitWork"),
  subscribe: makeWrapper("vap_subscribe"),
  syncing: makeWrapper("vap_syncing"),
  uninstallFilter: makeWrapper("vap_uninstallFilter"),
  unsubscribe: makeWrapper("vap_unsubscribe"),
};
